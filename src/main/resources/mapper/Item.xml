<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hannamsm.shop.domain.item.dao.ItemDao">
<select id="findAllCount" parameterType="com.hannamsm.shop.domain.item.vo.ItemSearch" resultType="int">
select count(item_id) as totalCount
  from item
 where 1=1
    <if test="itemName != null and itemName != ''">
   and (item_kr_nm like '%'+#{itemName}+'%' or item_en_nm like '%'+#{itemName}+'%')
    </if>
    <if test="itemCategory != null and itemCategory != '' and itemCategory != 'L29901'.toString()">
   and category_cd = #{itemCategory}
    </if>
</select>

<select id="findAll" parameterType="com.hannamsm.shop.domain.item.vo.ItemSearch" resultType="com.hannamsm.shop.domain.item.vo.Item">
select item_id              as itemId
     , upc                  as upc
     , item_kr_nm           as itemKrNm
     , item_en_nm           as itemEnNm
     , receiving_price      as receivingPrice
     , regular_price        as regularPrice
     , category_cd          as categoryCd
     , item_tax_cd          as itemTaxCd
     , item_deposit_cd      as itemDepositCd
     , item_eco_cd          as itemEcoCd
     , item_size            as itemSize
     , sale_unit            as saleUnit
     , promotion_bundle_qty as promotionBundleQty
     , promotion_start_date as promotionStartDate
     , promotion_end_date   as promotionEndDate
     , promotion_price      as promotionPrice
     , gal_code             as galCode
     , prod_own_code        as prodOwnCode
     , supp_code            as suppCode
     , prod_id              as prodId
     , item_type            as itemType
     , item_type2           as itemType2
     , (case when promotion_start_date <![CDATA[<]]> getdate() and getdate() <![CDATA[<]]> promotion_end_date then promotion_price
             else regular_price
        end) as salesPrice
     , (case when promotion_start_date <![CDATA[<]]> getdate() and getdate() <![CDATA[<]]> promotion_end_date then ceiling(((regular_price - promotion_price)/regular_price)*100)
             else 0
        end) as discountRate --(정가-할인가)/정가
     , 'http://placehold.it/160x180' as imgUrl
     , is_use               as isUse
     , reg_date             as regDate
     , reg_person           as regPerson
     , last_mod_date        as lastModDate
     , last_mod_person      as lastModPerson
  from item
 where 1=1
    <if test="itemName != null and itemName != ''">
   and (item_kr_nm like '%'+#{itemName}+'%' or item_en_nm like '%'+#{itemName}+'%')
    </if>
    <if test="itemCategory != null and itemCategory != '' and itemCategory != 'L29901'.toString()">
   and category_cd = #{itemCategory}
    </if>
    <if test="itemSort != null and itemSort != '' and itemSort == 'O0'.toString()">
 order by item_id
    </if>
    <if test="itemSort != null and itemSort != '' and itemSort == 'O1'.toString()">
 order by regular_price asc
    </if>
    <if test="itemSort != null and itemSort != '' and itemSort == 'O2'.toString()">
 order by regular_price desc
    </if>
offset #{startRownum} rows
 fetch next #{listSize} row only
</select>

<select id="findById" parameterType="com.hannamsm.shop.domain.item.vo.ItemSearch" resultType="com.hannamsm.shop.domain.item.vo.Item">
select item_id              as itemId
     , upc                  as upc
     , item_kr_nm           as itemKrNm
     , item_en_nm           as itemEnNm
     , receiving_price      as receivingPrice
     , regular_price        as regularPrice
     , category_cd          as categoryCd
     , item_tax_cd          as itemTaxCd
     , item_deposit_cd      as itemDepositCd
     , item_eco_cd          as itemEcoCd
     , item_size            as itemSize
     , sale_unit            as saleUnit
     , promotion_bundle_qty as promotionBundleQty
     , promotion_start_date as promotionStartDate
     , promotion_end_date   as promotionEndDate
     , promotion_price      as promotionPrice
     , gal_code             as galCode
     , prod_own_code        as prodOwnCode
     , supp_code            as suppCode
     , prod_id              as prodId
     , item_type            as itemType
     , item_type2           as itemType2
     , is_use               as isUse
     , reg_date             as regDate
     , reg_person           as regPerson
     , last_mod_date        as lastModDate
     , last_mod_person      as lastModPerson
  from item
 where item_id = #{item_id}
</select>

<select id="findByName" parameterType="com.hannamsm.shop.domain.item.vo.ItemSearch" resultType="com.hannamsm.shop.domain.item.vo.Item">
select item_id              as itemId
     , upc                  as upc
     , item_kr_nm           as itemKrNm
     , item_en_nm           as itemEnNm
     , receiving_price      as receivingPrice
     , regular_price        as regularPrice
     , category_cd          as categoryCd
     , item_tax_cd          as itemTaxCd
     , item_deposit_cd      as itemDepositCd
     , item_eco_cd          as itemEcoCd
     , item_size            as itemSize
     , sale_unit            as saleUnit
     , promotion_bundle_qty as promotionBundleQty
     , promotion_start_date as promotionStartDate
     , promotion_end_date   as promotionEndDate
     , promotion_price      as promotionPrice
     , gal_code             as galCode
     , prod_own_code        as prodOwnCode
     , supp_code            as suppCode
     , prod_id              as prodId
     , item_type            as itemType
     , item_type2           as itemType2
     , is_use               as isUse
     , reg_date             as regDate
     , reg_person           as regPerson
     , last_mod_date        as lastModDate
     , last_mod_person      as lastModPerson
  from item
 where 1=1
   and (item_kr_nm like '%'+ #{itemName} + '%' or item_en_nm like '%'+ #{itemName} +'%')
</select>

</mapper>
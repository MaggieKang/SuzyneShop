<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hannamsm.shop.domain.address.dao.AddressDao">
<select id="findAll" parameterType="com.hannamsm.shop.domain.address.vo.AccountAddress" resultType="com.hannamsm.shop.domain.address.vo.AccountAddress">
SELECT a.account_no AS accountNo
      ,a.account_email AS accountEmail
      ,b.seq AS seq
      ,b.address AS address
      ,b.city AS city
      ,(select top 1 city_nm from city where city_cd = b.city) as cityNm
      ,b.province AS province
      ,(select top 1 province_nm from province where province_cd = b.province) as provinceNm
      ,b.country AS country
      ,(select top 1 country_nm from country where country_cd = b.country) as countryNm
      ,b.postal_cd AS postalCd
      ,b.is_default_address AS isDefaultAddress
FROM account a
LEFT OUTER JOIN account_address b ON b.account_no = a.account_no
WHERE a.account_no = #{accountNo}
order by is_default_address DESC, seq ASC
</select>
<select id="findById" parameterType="com.hannamsm.shop.domain.address.vo.AccountAddress" resultType="com.hannamsm.shop.domain.address.vo.AccountAddress">
select a.account_no as accountNo
     , a.account_email as accountEmail
     , b.seq as seq
     , b.address as address
     , b.city as city
     , (select top 1 city_nm from city where city_cd = b.city) as cityNm
     , b.province as province
     , (select top 1 province_nm from province where province_cd = b.province) as provinceNm
     , b.country as country
     , (select top 1 country_nm from country where country_cd = b.country) as countryNm
     , b.postal_cd as postalCd
     , b.is_default_address as isDefaultAddress
  from account a
     , account_address b
 where a.account_no = #{accountNo}
   and b.account_no = a.account_no
   and b.seq = #{seq}
</select>
<insert id="saveAddress" parameterType="com.hannamsm.shop.domain.address.vo.AccountAddress">
MERGE account_address AS a
USING (SELECT #{accountNo} AS account_no
			, #{seq}   AS seq
			, #{address}   AS address
			, #{city}  	   AS city
			, #{province}  AS province
			, #{country}   AS country
			, #{postalCd}  AS postal_cd
			, #{isDefaultAddress}  AS is_default_address
	   ) AS b
	ON(
			a.account_no = b.account_no
			and a.seq = b.seq
	   )
	   WHEN NOT MATCHED THEN
	   		INSERT ( account_no
                    , address
                    , city
                    , province
                    , country
                    , postal_cd
                    , is_default_address
                    , reg_date
                    , reg_person
                    , last_mod_date
                    , last_mod_person
	   		) VALUES(
                      b.account_no
                    , b.address
                    , b.city
                    , b.province
                    , b.country
                    , b.postal_cd
                    , b.is_default_address
                    , getdate()
                    , b.account_no
                    , getdate()
                    , b.account_no
	   		)
	  WHEN MATCHED THEN
	  		UPDATE
	  		SET   a.account_no = b.account_no
                  , a.address = b.address
                  , a.city = b.city
                  , a.province = b.province
                  , a.country = b.country
                  , a.postal_cd = b.postal_cd
                  , a.is_default_address = b.is_default_address
                  , a.last_mod_date = getdate()
                  , a.last_mod_person = b.account_no;
</insert>
<update id ="updataDefaultAddress" parameterType="int">
UPDATE account_address
SET is_default_address= 0
WHERE seq=#{beSeq}
</update>
<delete id="deleteAddress" parameterType="com.hannamsm.shop.domain.address.vo.AccountAddressDto">
DELETE account_address
WHERE account_no = #{accountNo}
AND seq = #{seq}
</delete>
<select id="getCity" resultType="com.hannamsm.shop.domain.address.vo.Address">
SELECT city_cd AS id
	 ,city_nm AS name
	 ,province_cd AS parent_id
FROM city
</select>
<select id="getProvince" resultType="com.hannamsm.shop.domain.address.vo.Address">
SELECT province_cd AS id
	  ,province_nm AS name
	  ,country_cd AS parent_id
FROM province
</select>
<select id="getCountry" resultType="com.hannamsm.shop.domain.address.vo.Address">
SELECT country_cd AS id
	  ,country_nm AS name
FROM country
</select>
</mapper>

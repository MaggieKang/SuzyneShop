<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hannamsm.shop.domain.account.dao.AccountDao">
<select id="findByUserNo" parameterType="int" resultType="com.hannamsm.shop.domain.account.vo.Account">
 select account_no    as accountNo
      , account_email as accountEmail
      , password      as password
      , is_expired    as isExpired
      , is_locked     as isLocked
      , is_use        as isUse
   from account
  where account_no = #{accountNo}
</select>
<select id="findByUserEmail" parameterType="String" resultType="com.hannamsm.shop.domain.account.vo.Account">
 select account_no    as accountNo
      , account_email as accountEmail
      , password      as password
      , is_expired    as isExpired
      , is_locked     as isLocked
      , is_use        as isUse
   from account
  where account_email = #{accountEmail}
</select>
<select id="findRolesByUserNo" parameterType="int" resultType="String">
select auth_cd
  from account_authority
 where account_no = #{accountNo}
</select>

<select id="checkOldPassword" parameterType="com.hannamsm.shop.domain.account.vo.Account" resultType="com.hannamsm.shop.domain.account.vo.Account">
select   account_no		as accountNo
		, account_email	as accountEmail
		, is_expired		as isExpired
		, is_locked		as isLocked
		, is_use			as isUse
	FROM account 
	WHERE account_email 	= #{accountEmail}
	AND password 			= #{password}
</select>
<select id="findUserID" parameterType="com.hannamsm.shop.domain.profile.vo.Customer" resultType="String">
SELECT top 1 account_email 
	FROM account a
	LEFT OUTER JOIN customer b ON b.account_no = a.account_no
	WHERE customer_phone_number = #{customerPhoneNumber}
	AND b.last_name 		= #{lastName}
</select>
<select id="resetPassword" parameterType="com.hannamsm.shop.domain.account.vo.Account">
UPDATE account
	SET password = #{newPassword}
	WHERE account_email = #{accountEmail}
</select>
<insert id="createAccount" parameterType="com.hannamsm.shop.domain.account.vo.Account">
insert into account
(
       account_email
     , password
     , is_expired
     , is_locked
     , is_use
     , reg_date
     , reg_person
     , last_mod_date
     , last_mod_person
) values (
      #{accountEmail}
     , #{password}
     , 0
     , 0
     , 1
     , getDate()
     , #{accountEmail}
     , getDate()
     , #{accountEmail}
)
</insert>
<delete id="deleteAccount" parameterType="com.hannamsm.shop.domain.account.vo.Account">
update account
   set isEnabled = 1
     , lastModDate = getDate()
     , lastModPerson = #{accountNo}
 where account_no = #{accountNo}
</delete>
<insert id="createAuthority" parameterType="int">
insert into account_authority
(      account_no
     , auth_cd
     , reg_date
     , reg_person
     , last_mod_date
     , last_mod_person
) values (
       #{accountNo}
     , #{authCd}
     , getDate()
     , #{accountNo}
     , getDate()
     , #{accountNo}
);
</insert>
<delete id="deleteAuthority" parameterType="com.hannamsm.shop.domain.account.vo.AccountAuthority">
delete account_authority
 where account_no = #{accountNo}
   and authority_code = #{authCd}
</delete>
<delete id="deleteAuthorities" parameterType="com.hannamsm.shop.domain.account.vo.AccountAuthority">
delete account_authority
 where account_no = #{accountNo}
</delete>
</mapper>

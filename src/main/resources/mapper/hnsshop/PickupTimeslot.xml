<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suzyne.shop.domain.pickup.dao.PickupTimeslotDao">

<select id="findBySlotDt" parameterType="com.suzyne.shop.domain.pickup.vo.PickupSlogDtSearch" resultType="com.suzyne.shop.domain.pickup.vo.PickupTimeslot">
select slot_dt         as slotDt
     , format(cast(slot_time AS datetime), 'HH:mm') as slotTime
     , format(cast(slot_time AS datetime), 'hh tt') as startDisplaySlotTime
     , format(cast(dateadd(hour, 1, slot_time) AS datetime), 'hh tt') as endDisplaySlotTime
     , store_id        as storeId
     , allocation_qty  as allocationQty
     , reserved_qty    as reservedQty
     , (case when reserved_qty >= allocation_qty then 0
             when dateadd(hour,1,getdate()) > convert(datetime, convert(varchar,slot_dt,23) +' '+ convert(varchar,format(cast(slot_time AS datetime), 'HH:mm:ss'),114), 121) then 0
             else 1
       end) as pickupAvailable
     , reg_date        as regDate
     , reg_person      as regPerson
     , last_mod_date   as lastModDate
     , last_mod_person as lastModPerson
  from pickup_timeslot
 where store_id = #{storeId}
   and slot_dt = #{slotDt}
</select>

<select id="findBySlotTime" parameterType="com.suzyne.shop.domain.pickup.vo.PickupSlotTimeSearch" resultType="com.suzyne.shop.domain.pickup.vo.PickupTimeslot">
select slot_dt         as slotDt
     , format(cast(slot_time AS datetime), 'HH:mm') as slotTime
     , format(cast(slot_time AS datetime), 'hh tt') as startDisplaySlotTime
     , format(cast(dateadd(hour, 1, slot_time) AS datetime), 'hh tt') as endDisplaySlotTime
     , store_id        as storeId
     , allocation_qty  as allocationQty
     , reserved_qty    as reservedQty
     , (case when reserved_qty >= allocation_qty then 0
             when dateadd(hour,1,getdate()) > convert(datetime, convert(varchar,slot_dt,23) +' '+ convert(varchar,format(cast(slot_time as datetime), 'HH:mm:ss'),114), 121) then 0
             else 1
       end) as pickupAvailable
     , reg_date        as regDate
     , reg_person      as regPerson
     , last_mod_date   as lastModDate
     , last_mod_person as lastModPerson
  from pickup_timeslot
 where store_id = #{storeId}
   and slot_dt = #{slotDt}
   and slot_time = #{slotTime}
</select>

<select id="getNumberAvailable" parameterType="com.suzyne.shop.domain.pickup.vo.PickupSlotTimeSearch" resultType="int">
select isnull((
	select (case when dateadd(hour,1,getdate()) > convert(datetime, convert(varchar,slot_dt,23) +' '+ convert(varchar,format(cast(slot_time as datetime), 'HH:mm:ss'),114), 121) then 0
                 else (allocation_qty - reserved_qty)
           end) as numberAvailable
	  from pickup_timeslot
	 where store_id = #{storeId}
	   and slot_dt = #{slotDt}
	   and slot_time = #{slotTime}
       ),1) as numberAvailable
</select>

<insert id="saveSlotTime" parameterType="com.suzyne.shop.domain.pickup.vo.PickupTimeslot">
merge pickup_timeslot as a
using (select #{slotDt}        as slot_dt
            , #{slotTime}      as slot_time
            , #{storeId}       as store_id
            , #{allocationQty} as allocation_qty
            , #{reservedQty} as reserved_qty
            , getDate()        as reg_date
            , #{regPerson}     as reg_person
            , getDate()        as last_mod_date
            , #{lastModPerson} as last_mod_person
      ) as b
        on (     a.store_id = b.store_id
             and a.slot_dt = b.slot_dt
             and a.slot_time = b.slot_time)
        when not matched then
             insert ( slot_dt
                    , slot_time
                    , store_id
                    , allocation_qty
                    , reserved_qty
                    , reg_date
                    , reg_person
                    , last_mod_date
                    , last_mod_person
             ) values (
                      b.slot_dt
                    , b.slot_time
                    , b.store_id
                    , b.allocation_qty
                    , b.reserved_qty
                    , b.reg_date
                    , b.reg_person
                    , b.last_mod_date
                    , b.last_mod_person
             )
        when matched then
             update set a.last_mod_person = b.last_mod_person
                  , a.last_mod_date = b.last_mod_date
                  , a.allocation_qty = b.allocation_qty
                  , a.reserved_qty = b.reserved_qty;
</insert>

<insert id="deleteTimeslot" parameterType="com.suzyne.shop.domain.pickup.vo.PickupTimeslot">
delete pickup_timeslot
 where store_id = #{storeId}
   and slot_dt = #{slotDt}
</insert>

<update id="updatePickupReservation" parameterType="com.suzyne.shop.domain.pickup.vo.UpdatePickupReservation">
merge pickup_timeslot as a
using (select #{storeId}       as store_id
            , #{slotDt}        as slot_dt
            , #{slotTime}      as slot_time
            , #{allocationQty} as allocation_qty
            , getDate()        as reg_date
            , #{accountNo}     as reg_person
            , getDate()        as last_mod_date
            , #{accountNo}     as last_mod_person
      ) as b
        on (     a.store_id = b.store_id
             and a.slot_dt = b.slot_dt
             and a.slot_time = b.slot_time)
        when not matched then
             insert ( slot_dt
                    , slot_time
                    , store_id
                    , allocation_qty
                    , reserved_qty
                    , reg_date
                    , reg_person
                    , last_mod_date
                    , last_mod_person
             ) values (
                      b.slot_dt
                    , b.slot_time
                    , b.store_id
                    , b.allocation_qty
                    , 1
                    , b.reg_date
                    , b.reg_person
                    , b.last_mod_date
                    , b.last_mod_person
             )
        when matched then
             update set a.last_mod_person = b.last_mod_person
                  , a.last_mod_date = b.last_mod_date
                  , a.reserved_qty += 1;
</update>

<select id="findBySlotDtDefault" parameterType="com.suzyne.shop.domain.pickup.vo.PickupSlogDtDefaultSearch" resultType="com.suzyne.shop.domain.pickup.vo.PickupTimeslotDefault">
select store_id                 as storeId
     , format(cast(default_slot_time as datetime), 'HH:mm') as slotTime
     , format(cast(default_slot_time as datetime), 'hh tt') as startDisplaySlotTime
     , format(cast(dateadd(hour, 1, default_slot_time) AS datetime), 'hh tt') as endDisplaySlotTime
     , allocation_qty as allocationQty
     , convert(date, #{slotDt}) as slotDt
     , (case when 0 >= allocation_qty then 0
             when dateadd(hour,1,getdate()) > convert(datetime, convert(varchar,#{slotDt},23) +' '+ convert(varchar,format(cast(default_slot_time as datetime), 'HH:mm:ss'),114), 121) then 0
             else 1
       end) as pickupAvailable
     , reg_date        as regDate
     , reg_person      as regPerson
     , last_mod_date   as lastModDate
     , last_mod_person as lastModPerson
  from pickup_timeslot_default
 where store_id = #{storeId}
   and default_day_Week = #{defaultDayWeek}
</select>

<select id="findBySlotDtDefaultByDayTime" parameterType="com.suzyne.shop.domain.pickup.vo.PickupSlogDtDefaultSearch" resultType="com.suzyne.shop.domain.pickup.vo.PickupTimeslotDefault">
select store_id                 as storeId
     , format(cast(default_slot_time as datetime), 'HH:mm') as slotTime
     , format(cast(default_slot_time as datetime), 'hh tt') as startDisplaySlotTime
     , format(cast(dateadd(hour, 1, default_slot_time) AS datetime), 'hh tt') as endDisplaySlotTime
     , allocation_qty as allocationQty
     , convert(date, #{slotDt}) as slotDt
     , (case when 0 >= allocation_qty then 0
             when dateadd(hour,1,getdate()) > convert(datetime, convert(varchar,#{slotDt},23) +' '+ convert(varchar,format(cast(default_slot_time as datetime), 'HH:mm:ss'),114), 121) then 0
             else 1
       end) as pickupAvailable
     , reg_date        as regDate
     , reg_person      as regPerson
     , last_mod_date   as lastModDate
     , last_mod_person as lastModPerson
  from pickup_timeslot_default
 where store_id = #{storeId}
   and default_day_Week = #{defaultDayWeek}
   and default_slot_time = #{defaultSlotTime}
</select>

</mapper>
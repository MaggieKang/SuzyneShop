<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suzyne.shop.domain.category.dao.CategoryDao">
<select id="findAllCount" parameterType="com.suzyne.shop.domain.category.vo.CategorySearch" resultType="int">
with temp as (
	select category_cd
	     , store_id
	     , category_nm
	     , parent_category_cd
	     , parent_store_id
	     , convert(varchar(255), category_cd) as sort
	     , convert(varchar(255), category_nm) as depth_full_nm
	  from category
	 where parent_category_cd = 'L000'
	   and parent_store_id = #{storeId}
	   and is_use = '1'
	 union all
	select a.category_cd
	     , a.store_id
	     , a.category_nm
	     , a.parent_category_cd
	     , a.parent_store_id
	     , convert(varchar(255), convert(nvarchar,b.sort) + ' > ' + convert(varchar(255), a.category_cd)) as sort
	     , convert(varchar(255), convert(nvarchar,b.depth_full_nm) + ' > ' + convert(varchar(255), a.category_nm)) as depth_full_nm
	  from category a
	     , temp b
	 where a.parent_category_cd = b.category_cd
	   and a.parent_store_id = b.store_id
	   and a.is_use = '1'
)
select count(category_cd) as totalCount
  from temp
 OPTION(MAXRECURSION 5)
</select>

<resultMap type="com.suzyne.shop.domain.category.vo.CategoryDto" id="categoryMap">
    <id property="categoryCd" column="categoryCd" />
    <id property="categoryNm" column="categoryNm" />
    <id property="parentCategoryCd" column="parentCategoryCd" />

    <collection property="subCategoryList" ofType="com.suzyne.shop.domain.category.vo.CategoryDto">
        <id property="categoryCd" column="subCategoryCd" />
        <id property="categoryNm" column="subCategoryNm" />
        <id property="parentCategoryCd" column="subParentCategoryCd" />
    </collection>
</resultMap>

<select id="findAll" parameterType="com.suzyne.shop.domain.category.vo.CategorySearch" resultMap="categoryMap">
select l1.category_cd        as categoryCd
     , l1.category_nm        as categoryNm
     , l1.parent_category_cd as parentCategoryCd
     , l2.category_cd        as subCategoryCd
     , l2.category_nm        as subCategoryNm
     , l2.parent_category_cd as subParentCategoryCd
  from category l1
     , category l2
 where l1.parent_category_cd = 'L000'
   and l1.is_use = 1
   and l1.parent_store_id = #{storeId}
   and l1.category_cd = l2.parent_category_cd
   and l2.is_use = 1
 order by l1.category_cd, l2.parent_category_cd
</select>

<select id="findAll2" parameterType="com.suzyne.shop.domain.category.vo.CategorySearch" resultType="com.suzyne.shop.domain.category.vo.CategoryDto">
with temp as (
	select category_cd
	     , store_id
	     , category_nm
	     , parent_category_cd
	     , parent_store_id
	     , convert(varchar(255), category_cd) as sort
	     , convert(varchar(255), category_nm) as depth_full_nm
	  from category
	 where parent_category_cd = 'L000'
	   and parent_store_id = #{storeId}
	   and is_use = '1'
	 union all
	select a.category_cd
	     , a.store_id
	     , a.category_nm
	     , a.parent_category_cd
	     , a.parent_store_id
	     , convert(varchar(255), convert(nvarchar,b.sort) + ' > ' + convert(varchar(255), a.category_cd)) as sort
	     , convert(varchar(255), convert(nvarchar,b.depth_full_nm) + ' > ' + convert(varchar(255), a.category_nm)) as depth_full_nm
	  from category a
	     , temp b
	 where a.parent_category_cd = b.category_cd
	   and a.parent_store_id = b.store_id
	   and a.is_use = '1'
)
select category_cd        as categoryCd
     , store_id           as storeId
     , category_nm        as categoryNm
     , parent_category_cd as parentCategoryCd
     , parent_store_id    as parentStoreId
     , depth_full_nm      as depthFullNm
  from temp
 order by sort
 OPTION(MAXRECURSION 5)
</select>

<select id="findByCodeCount" parameterType="com.suzyne.shop.domain.category.vo.CategorySearch" resultType="int">
with temp as (
	select category_cd
	     , store_id
	     , category_nm
	     , parent_category_cd
	     , parent_store_id
	     , convert(varchar(255), category_cd) sort
	     , convert(varchar(255), category_nm) depth_full_nm
	  from category
	 where parent_category_cd = #{categoryCd}
	   and parent_store_id = #{storeId}
	   and is_use = '1'
	 union all
	select a.category_cd
	     , a.store_id
	     , a.category_nm
	     , a.parent_category_cd
	     , a.parent_store_id
	     , convert(varchar(255), convert(nvarchar,b.sort) + ' > ' + convert(varchar(255), a.category_cd)) sort
	     , convert(varchar(255), convert(nvarchar,b.depth_full_nm) + ' > ' + convert(varchar(255), a.category_nm)) depth_full_nm
	  from category a
	     , temp b
	 where a.parent_category_cd = b.category_cd
	   and a.parent_store_id = b.store_id
	   and a.is_use = '1'
)
select count(category_cd) as totalCount
  from temp
option(maxrecursion 5)
</select>

<select id="findByCode" parameterType="com.suzyne.shop.domain.category.vo.CategorySearch" resultType="com.suzyne.shop.domain.category.vo.CategoryDto">
with temp as (
	select category_cd
	     , store_id
	     , category_nm
	     , parent_category_cd
	     , parent_store_id
	     , convert(varchar(255), category_cd) sort
	     , convert(varchar(255), category_nm) depth_full_nm
	  from category
	 where parent_category_cd = #{categoryCd}
	   and parent_store_id = #{storeId}
	   and is_use = '1'
	 union all
	select a.category_cd
	     , a.store_id
	     , a.category_nm
	     , a.parent_category_cd
	     , a.parent_store_id
	     , convert(varchar(255), convert(nvarchar,b.sort) + ' > ' + convert(varchar(255), a.category_cd)) sort
	     , convert(varchar(255), convert(nvarchar,b.depth_full_nm) + ' > ' + convert(varchar(255), a.category_nm)) depth_full_nm
	  from category a
	     , temp b
	 where a.parent_category_cd = b.category_cd
	   and a.parent_store_id = b.store_id
	   and a.is_use = '1'
)
select category_cd        as categoryCd
     , store_id           as storeId
     , category_nm        as categoryNm
     , parent_category_cd as parentCategoryCd
     , parent_store_id    as parentStoreId
     , depth_full_nm      as depthFullNm
  from temp
 order by sort
 OPTION(MAXRECURSION 5)
</select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suzyne.shop.domain.favourite.dao.FavouriteDao">
<select id="findByAccountIdCount" parameterType="com.suzyne.shop.domain.favourite.vo.FavouriteItemSearch" resultType="int">
select count(a.item_id) as totalCount
  from favourite a
       inner join item b on b.item_id = a.item_id and is_use = 1
 where a.account_no = #{accountNo}
   and a.store_id = #{storeId}
</select>

<select id="findByAccountId" parameterType="com.suzyne.shop.domain.favourite.vo.FavouriteItemSearch" resultType="com.suzyne.shop.domain.favourite.vo.FavouriteItem">
select a.item_id         as itemId
     , a.store_id        as storeId
     , b.upc             as upc
     , b.item_kr_nm      as itemKrNm
     , b.item_en_nm      as itemEnNm
     , b.item_size       as itemSize
     , b.receiving_price as receiving_price
     , b.regular_price   as regularPrice
     , b.item_tax_cd     as itemTaxCd
     , b.sales_unit      as salesUnit
     , b.item_deposit_cd as itemDepositCd
     , b.category_cd     as categoryCd
     , a.reg_date        as regDate
     , a.reg_person      as regPerson
     , a.last_mod_date   as lastModDate
     , a.last_mod_person as lastModPerson
  from favourite a
       inner join item b on b.item_id = a.item_id and b.store_id = a.store_id and is_use = 1
 where a.account_no = #{accountNo}
   and a.store_id = #{storeId}
 order by a.item_id
offset #{startRownum} rows
 fetch next #{listSize} row only
</select>

<insert id="add" parameterType="com.suzyne.shop.domain.favourite.vo.FavouriteItemDto">
merge favourite as a
using (select #{accountNo}     as account_no
            , #{storeId}       as store_id
            , #{itemId}        as item_id
            , getdate()        as reg_date
            , #{regPerson}     as reg_person
            , getdate()        as last_mod_date
            , #{lastModPerson} as last_mod_person
      ) as b
        on (     a.account_no = b.account_no
             and a.store_id = b.store_id
             and a.item_id = b.item_id)
        when not matched then
             insert ( account_no
                    , store_id
                    , item_id
                    , reg_date
                    , reg_person
                    , last_mod_date
                    , last_mod_person
             ) values (
                      b.account_no
                    , b.store_id
                    , b.item_id
                    , b.reg_date
                    , b.reg_person
                    , b.last_mod_date
                    , b.last_mod_person
             )
        when matched then
               delete;
</insert>
<delete id="delete" parameterType="com.suzyne.shop.domain.favourite.vo.FavouriteItem">
delete favourite
 where account_no = #{accountNo}
   and store_id = #{storeId}
   and item_id = #{itemId}
</delete>
</mapper>
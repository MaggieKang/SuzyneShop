<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suzyne.shop.domain.event.dao.EventDao">
<insert id="create" parameterType="com.suzyne.shop.domain.event.vo.Event">
INSERT INTO EVENT (
            id
          , name
          , description
          , beginEnrollmentDateTime
          , closeEnrollmentDateTime
          , beginEventDateTime
          , endEventDateTime
          , location
          , basePrice
          , maxPrice
          , limitOfEnrollment
          , offline
          , free
          , eventStatus
          , regDate
          , regPerson
          , lastModDate
          , lastModPerson
) VALUES ( 
            #{event.id}
          , #{event.name}
          , #{event.description}
          , #{event.beginEnrollmentDateTime}
          , #{event.closeEnrollmentDateTime}
          , #{event.beginEventDateTime}
          , #{event.endEventDateTime}
          , #{event.location}
          , #{event.basePrice}
          , #{event.maxPrice}
          , #{event.limitOfEnrollment}
          , #{event.offline}
          , #{event.free}
          , #{event.eventStatus}
          , getdate()
          , #{event.lastModPerson}
          , getdate()
          , #{event.lastModPerson}
)
</insert>
<update id="update" parameterType="com.suzyne.shop.domain.event.vo.Event">
UPDATE EVENT
   SET lastModPerson           = #{lastModPerson}
     , lastModDate             = getdate()
     , name                    = #{name}                       
     , description             = #{description}                
     , beginEnrollmentDateTime = #{beginEnrollmentDateTime}    
     , closeEnrollmentDateTime = #{closeEnrollmentDateTime}    
     , beginEventDateTime      = #{beginEventDateTime}         
     , endEventDateTime        = #{endEventDateTime}           
     , location                = #{location}                   
     , basePrice               = #{basePrice}                  
     , maxPrice                = #{maxPrice}                   
     , limitOfEnrollment       = #{limitOfEnrollment}          
     , offline                 = #{offline}                    
     , free                    = #{free}                       
     , eventStatus             = #{eventStatus}                
 WHERE id = #{id}
</update>
<select id="findAllTotalCount" parameterType="com.suzyne.shop.domain.event.vo.EventSearch" resultType="int">
SELECT COUNT(id) AS totalCount
  FROM EVENT
</select>

<select id="findAll" parameterType="com.suzyne.shop.domain.event.vo.EventSearch" resultType="com.suzyne.shop.domain.event.vo.Event">
SELECT id
     , name
     , description
     , beginEnrollmentDateTime
     , closeEnrollmentDateTime
     , beginEventDateTime
     , closeEnrollmentDateTime
     , beginEventDateTime
     , endEventDateTime
     , location
     , basePrice
     , maxPrice
     , limitOfEnrollment
     , offline
     , free
     , eventStatus
     , regDate
     , regPerson
     , lastModDate
     , lastModPerson
  FROM EVENT
 ORDER BY id
OFFSET #{startRownum} ROWS
 FETCH NEXT #{listSize} ROW ONLY
</select>

<select id="selectEventId" parameterType="int" resultType="int">
SELECT ISNULL(MAX(id),0)+1 AS id
  FROM EVENT
</select>
<select id="findById" parameterType="int" resultType="com.suzyne.shop.domain.event.vo.Event">
SELECT id
     , name
     , description
     , beginEnrollmentDateTime
     , closeEnrollmentDateTime
     , beginEventDateTime
     , closeEnrollmentDateTime
     , beginEventDateTime
     , endEventDateTime
     , location
     , basePrice
     , maxPrice
     , limitOfEnrollment
     , offline
     , free
     , eventStatus
     , regDate
     , regPerson
     , lastModDate
     , lastModPerson
  FROM EVENT
 WHERE id = #{id}
</select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hannamsm.shop.domain.profile.dao.ProfileDao">
<select id="findById" parameterType="int" resultType="com.hannamsm.shop.domain.profile.vo.Customer">
SELECT a.account_no AS accountNo
	   ,b.first_name AS firstName
	   ,b.last_name AS lastName
	   ,b.customer_email AS customerEmail
	   ,b.customer_phone_number  AS customerPhoneNumber
	   ,b.extension_nember  AS extensionNumber
	   ,c.address AS address
	   ,c.city AS city
	   ,c.province AS province
	   ,c.country AS country
	   ,c.postal_cd AS postalCd
	   ,c.is_default_address AS isDefaultAddress
FROM account a
LEFT OUTER JOIN customer b ON b.account_no = a.account_no
LEFT OUTER JOIN account_address c ON c.account_no = a.account_no
WHERE a.account_no = #{accountNo}
</select>
<insert id="saveProfile" parameterType="com.hannamsm.shop.domain.profile.vo.Customer">
MERGE customer AS a
USING (SELECT #{accountNo} AS account_no
			, #{firstName} AS first_name
			, #{lastName}  AS last_name
			, #{customerEmail}		  AS customer_email
			, #{customerPhoneNumber}  AS customer_phone_number
			, #{extensionNumber}      AS extension_nember
	   ) AS b
	ON(
			a.account_no =b.account_no
	   )
	   WHEN NOT MATCHED THEN
	   		INSERT ( account_no
                    , first_name
                    , last_name
                    , customer_email
                    , customer_phone_number
                    , extension_nember
                    , customer_gender
                    , customer_kr_nm
                    , customer_en_nm
                    , customer_lang_cd
                    , membership_no
                    , reg_date
                    , reg_person
                    , last_mod_date
                    , last_mod_person
	   		) VALUES(
	   				  b.account_no
                    , b.first_name
                    , b.last_name
                    , b.customer_email
                    , b.customer_phone_number
                    , b.extension_nember
                    , NULL
                    , NULL
                    , NULL
                    , NULL
                    , NULL
                    , getdate()
                    , b.account_no
                    , getdate()
                    , b.account_no
	   		)
	  WHEN MATCHED THEN
	  		UPDATE
	  		SET   a.account_no = b.account_no
                  , a.first_name = b.first_name
                  , a.last_name = b.last_name
                  , a.customer_email = b.customer_email
                  , a.customer_phone_number = b.customer_phone_number
                  , a.extension_nember = b.extension_nember
                  , a.last_mod_date = getdate()
                  , a.last_mod_person = b.account_no;
</insert>
<insert id="saveAddress" parameterType="com.hannamsm.shop.domain.profile.vo.Customer">
MERGE account_address AS a
USING (SELECT #{accountNo} AS account_no
			, #{address}   AS address
			, #{city}  	   AS city
			, #{province}  AS province
			, #{country}   AS country
			, #{postalCd}  AS postal_cd
			, #{isDefaultAddress}  AS is_default_address
	   ) AS b
	ON(
			a.account_no =b.account_no
	   )
	   WHEN NOT MATCHED THEN
	   		INSERT ( account_no
                    , address
                    , city
                    , province
                    , country
                    , postal_cd
                    , is_default_address
                    , reg_date
                    , reg_person
                    , last_mod_date
                    , last_mod_person
	   		) VALUES(
                      b.account_no
                    , b.address
                    , b.city
                    , b.province
                    , b.country
                    , b.postal_cd
                    , b.is_default_address
                    , getdate()
                    , b.account_no
                    , getdate()
                    , b.account_no
	   		)
	  WHEN MATCHED THEN
	  		UPDATE
	  		SET   a.account_no = b.account_no
                  , a.address = b.address
                  , a.city = b.city
                  , a.province = b.province
                  , a.country = b.country
                  , a.postal_cd = b.postal_cd
                  , a.is_default_address = b.is_default_address
                  , a.last_mod_date = getdate()
                  , a.last_mod_person = b.account_no;
</insert>
</mapper>
